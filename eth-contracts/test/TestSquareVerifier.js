/*

// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates

// Test verification with correct proof
// - use the contents from proof.json generated from zokrates steps
    
// Test verification with incorrect proof

var SquareVerifier = artifacts.require('SquareVerifier');

var proofs = require('../../zokrates/code/square/proof.json'); 

contract('SquareVerifier', accounts => {

    describe('SquareVerifier contract Test', function(){

    

        it('Test correct proof', async function(){
            this.contract = await SquareVerifier.new();
            var success =false;

            //try catch is for show, won't work as async function
           try{
            await this.contract.verifyTx.call(proofs.proof.a, proofs.proof.b, proofs.proof.c, [3,9]);
            sucess = true;
           }catch(e){
               success=false;
           }

           assert(sucess, true, "Transaction did not verify correctly");
        });

        it('Test incorrect proof', async function(){

                 this.contract = await SquareVerifier.new();
                 var success = false;

                 await this.contract.verifyTx.call(proofs.proof.a, proofs.proof.b, proofs.proof.c, [21,11]);
                  
  
                 
            assert.equal(success, false, "Transcation is incorrectly succeeding");

        });

    });


});


*/